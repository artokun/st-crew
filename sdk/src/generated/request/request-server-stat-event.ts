// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class RequestServerStatEvent implements flatbuffers.IUnpackableObject<RequestServerStatEventT> {
  bb: flatbuffers.ByteBuffer | null = null;
  bb_pos = 0;
  __init(i: number, bb: flatbuffers.ByteBuffer): RequestServerStatEvent {
    this.bb_pos = i;
    this.bb = bb;
    return this;
  }

  static getRootAsRequestServerStatEvent(
    bb: flatbuffers.ByteBuffer,
    obj?: RequestServerStatEvent
  ): RequestServerStatEvent {
    return (obj || new RequestServerStatEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static getSizePrefixedRootAsRequestServerStatEvent(
    bb: flatbuffers.ByteBuffer,
    obj?: RequestServerStatEvent
  ): RequestServerStatEvent {
    bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
    return (obj || new RequestServerStatEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
  }

  static startRequestServerStatEvent(builder: flatbuffers.Builder) {
    builder.startObject(0);
  }

  static endRequestServerStatEvent(builder: flatbuffers.Builder): flatbuffers.Offset {
    const offset = builder.endObject();
    return offset;
  }

  static createRequestServerStatEvent(builder: flatbuffers.Builder): flatbuffers.Offset {
    RequestServerStatEvent.startRequestServerStatEvent(builder);
    return RequestServerStatEvent.endRequestServerStatEvent(builder);
  }

  unpack(): RequestServerStatEventT {
    return new RequestServerStatEventT();
  }

  unpackTo(_o: RequestServerStatEventT): void {}
}

export class RequestServerStatEventT implements flatbuffers.IGeneratedObject {
  constructor() {}

  pack(builder: flatbuffers.Builder): flatbuffers.Offset {
    return RequestServerStatEvent.createRequestServerStatEvent(builder);
  }
}
